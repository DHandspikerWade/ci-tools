variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_REGISTRY: https://index.docker.io/v1/
  EXTRA_OPTIONS: ''
  IMAGE_NAME: handspiker2/ci-tools

stages:
  - base
  - depends
  - deploy

.build_template: &build_template
  image: handspiker2/ci-tools:docker 
  stage: depends
  services:
    - docker:dind
  needs: ['build_base']
  dependencies:
    - build_base
  script:
    - docker version
    - export IMAGE_NAME="${IMAGE_NAME}:${TAG_NAME}"
    - docker pull "$IMAGE_NAME" || true
    - cat artifacts/base_image | docker load
    # Clean output directory so not to duplicate base artifacts
    - rm -f artifacts/*
    - docker build --cache-from "$IMAGE_NAME" $EXTRA_OPTIONS -t "$IMAGE_NAME" -f $DOCKER_FILE .
    - export IMAGE_ARTIFACT="${TAG_NAME}_image"
    - rm -f artifacts/.gitkeep
    - docker save "$IMAGE_NAME" > artifacts/$IMAGE_ARTIFACT
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - artifacts/

.deploy_template: &deploy_template
  image: handspiker2/ci-tools:docker 
  stage: deploy
  services:
    - docker:dind
  script:
    - docker version
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin "$DOCKER_REGISTRY"
    - export IMAGE_ARTIFACT="${TAG_NAME}_image"
    - cat artifacts/$IMAGE_ARTIFACT | docker load
    - export IMAGE_NAME="${IMAGE_NAME}:${TAG_NAME}"
    - docker push "$IMAGE_NAME"
  only:
    refs:
      - master

build_base:
  image: handspiker2/ci-tools:docker 
  services:
    - docker:dind
  stage: base
  variables:
    EXTRA_OPTIONS: '-t handspiker2/ci-tools:latest'
    IMAGE_NAME: handspiker2/ci-tools:base
    IMAGE_ARTIFACT: base_image
    DOCKER_FILE: base.Dockerfile
  script:
    - docker version
    - docker pull ubuntu:22.04
    - docker pull "$IMAGE_NAME" || true
    - docker build --cache-from "$IMAGE_NAME" $EXTRA_OPTIONS -t "$IMAGE_NAME" -f $DOCKER_FILE .
    - rm -f artifacts/.gitkeep
    - docker save "$IMAGE_NAME" > artifacts/$IMAGE_ARTIFACT
    #- docker push "$IMAGE_NAME"
    #- docker push handspiker2/ci-tools:latest
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - artifacts/

deploy_base:
  image: handspiker2/ci-tools:docker 
  stage: deploy
  services:
    - docker:dind
  script:
    - docker version
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin "$DOCKER_REGISTRY"
    - export IMAGE_ARTIFACT="base_image"
    - cat artifacts/$IMAGE_ARTIFACT | docker load
    - docker tag ${IMAGE_NAME}:base ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:base && docker push ${IMAGE_NAME}:latest
  only:
    refs:
      - master
  needs: ['build_base']
  dependencies:
    - build_base

build_ansible:
  <<: *build_template
  stage: depends
  variables: 
    TAG_NAME: ansible
    DOCKER_FILE: ansible.Dockerfile

build_docker:
  <<: *build_template
  stage: depends
  variables: 
    TAG_NAME: docker
    DOCKER_FILE: docker.Dockerfile

.build_php: &php_template
  <<: *build_template
  stage: depends
  variables: &php_variables
    PHP_VERSION: ''
    EXTRA_OPTIONS: '--build-arg PHP_VERSION'
    DOCKER_FILE: php.Dockerfile 

build_php7.4:
  <<: *php_template
  variables:
    <<: *php_variables
    PHP_VERSION: '7.4.3'
    TAG_NAME: 'php7.4'

build_php7.3:
  <<: *php_template
  variables:
    <<: *php_variables
    PHP_VERSION: '7.3.15'
    TAG_NAME: 'php7.3'

build_php7.2:
  <<: *php_template
  variables:
    <<: *php_variables
    PHP_VERSION: '7.2.17'
    TAG_NAME: 'php7.2'

build_php7.1:
  <<: *php_template
  variables:
    <<: *php_variables
    PHP_VERSION: '7.1.28'
    TAG_NAME: 'php7.1'

build_php5.6:
  <<: *php_template
  variables:
    <<: *php_variables
    PHP_VERSION: '5.6.40'
    TAG_NAME: 'php5.6'

deploy_ansible:
  <<: *deploy_template
  variables: 
    TAG_NAME: ansible
  needs: ['build_ansible']
  dependencies:
    - build_ansible

deploy_docker:
  <<: *deploy_template
  variables: 
    TAG_NAME: ansible
  needs: ['build_docker']
  dependencies:
    - build_docker

deploy_php7.4:
  <<: *deploy_template
  variables: 
    TAG_NAME: php7.4
  needs: ['build_php7.4']
  dependencies:
    - build_php7.4

deploy_php7.3:
  <<: *deploy_template
  variables: 
    TAG_NAME: php7.3
  needs: ['build_php7.3']
  dependencies:
    - build_php7.3

deploy_php7.2:
  <<: *deploy_template
  variables: 
    TAG_NAME: php7.2
  needs: ['build_php7.2']
  dependencies:
    - build_php7.2

deploy_php7.1:
  <<: *deploy_template
  variables: 
    TAG_NAME: php7.1
  needs: ['build_php7.1']
  dependencies:
    - build_php7.1

deploy_php5.6:
  <<: *deploy_template
  variables: 
    TAG_NAME: php5.6
  needs: ['build_php5.6']
  dependencies:
    - build_php5.6